项目名：In-Memory KeyValue DataBase
功能概述：
1.数据库的创建和删除。
  可创建不同名称和类型的数据库。不同类型指的是数据存储所采用的数据结构和文件格式不同。
2.基于Key-Value pair的数据增／删／改／查。
3.将数据载入内存。数据访问更新基于内存中的数据结构。
4.将数据转存到外存文件。数据的持久化基于外存的数据文件。
5.远程访问。
6.多用户并发访问。

设计思想与实现方法：
1.内存中的数据结构以map实现，支持对multi map,set,vector等不同类型的扩展。
2.参考操作系统的分页机制，将数据分成大小均等的块。将要访问的块载入内存，换出最久无访问的块。
3.在内存中建立Key索引和Map页(块)索引。以提高操作性能，支持分页机制。
4.在外存文件的保存与内存中的数据Map和索引结构保持一致。
5.数据的外存转储时机有以下几个。
  A.系统每隔24小时自动进行转储。
  B.数据库被关闭时。
  C.数据库管理员做转储操作时。
6.将对数据的每一次更新操作记录到日志中。
  对未持久化到外存的数据的恢复可由操作日志完全支持。(暂未做实现)
7.用户的操作接口构建于Socket通信。采用Client-Server模式。
8.多用户并发采用多线程机制。
9.不同的数据库运行于不同的进程中，在地址空间和访问操作上是相互独立的。

程序结构说明：
IKeyValDB.h .cpp — 数据库访问操作的接口虚基类。由子类继承，以实现map,set等不同数据结构的扩展。(策略模式)
Map_KeyValDB.h .cpp - 继承于IKeyValDB类的具体实现。
DBService.cpp - 对外部提供数据操作服务的Server类，实装了Socket和Thread程序。
DBServiceManager.h .cpp － 针对数据库管理员的管理程序，提供数据库创建／销毁／打开／关闭等操作。
DBAccessClient.cpp - 数据库访问的Socket客户端。
KeyValDBDefs.h － 全局级别的类型／常量定义。
Map_DBDefs.h - map类型的子类专用的类型／常量定义。
（对于将数据由内存转储到外存文件的程序，考虑也采用策略模式以支持多种文件格式的扩展。
 对于查询结果的展示，考虑采用观察者模式以支持多种表示形式的扩展。但这两方面暂未实装。）

其他说明：
本程序构建于MacOSX之上，尽量采用了多平台可移植的POSIX标准的编程方法。
